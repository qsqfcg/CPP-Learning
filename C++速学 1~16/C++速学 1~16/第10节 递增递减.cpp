#include<iostream>
using namespace std;

#include"函数调用.h"
void main10()
{
	int a1 = 5;
	int b1 = 0;
	//前置递增
	b1 = ++a1;
	cout << "First b1：" << b1 << "\n" << endl;
	//重新赋值
	a1 = 5;
	b1 = 0;
	//后置递增
	b1 = a1++;
	cout << "Second b1：" << b1 << "\n" << endl;
	cout << "不难发现，前置递增和后置递增都会对递增的变量a1加1" << "\n" << endl;
	//重点来了，真正体现他们的不同
	a1 = 5;//重新赋值
	b1 = ++a1 * 3;
	cout << "a1前置递增运算结果：" << b1 << "\n" << endl;
	a1 = 5;//重新赋值
	b1 = a1++ * 3;
	cout << "a1后置递增运算结果：" << b1 << "\n" << endl;
	//是不是不同？懵了？慢慢捋一捋下面的解释代码
	//重新赋值
	a1 = 5;
	b1 = 0;
	/*前置分析*/
	a1 = a1 + 1;//先将a1递增上去
	b1 = a1 * 3;//再进行乘法运算
	//重新赋值
	a1 = 5;
	b1 = 0;
	int i = 0;//后置分析需要占用一定内存，由这步可以推断出前置分析比后置分析效率高
	/*后置分析*/
	i = a1;
	b1 = a1 * 3;//此时a1为5，得出b1为15
	a1 = i + 1;//最后a1才加上1

	system("pause");
}
